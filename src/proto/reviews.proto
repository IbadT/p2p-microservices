syntax = "proto3";

package reviews;

service ReviewsService {
  rpc CreateReview (CreateReviewRequest) returns (Review) {}
  rpc UpdateReview (UpdateReviewRequest) returns (Review) {}
  rpc GetReview (GetReviewRequest) returns (Review) {}
  rpc GetUserReviews (GetUserReviewsRequest) returns (ReviewsResponse) {}
  rpc GetReviewStats (GetReviewStatsRequest) returns (GetReviewStatsResponse) {}
}

message CreateReviewRequest {
  string transactionId = 1;
  string authorId = 2;
  string targetId = 3;
  int32 rating = 4;
  string comment = 5;
}

message UpdateReviewRequest {
  string reviewId = 1;
  optional int32 rating = 2;
  optional string comment = 3;
}

message GetReviewRequest {
  string reviewId = 1;
}

message GetUserReviewsRequest {
  string userId = 1;
  bool asReviewer = 2;
  int32 page = 3;
  int32 limit = 4;
}

message ReviewsResponse {
  repeated Review reviews = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message Review {
  string id = 1;
  string reviewerId = 2;
  string reviewedId = 3;
  int32 rating = 4;
  string comment = 5;
  string exchangeId = 6;
  string createdAt = 7;
  string updatedAt = 8;
}

message GetReviewStatsRequest {
  string userId = 1;
  optional string startDate = 2;
  optional string endDate = 3;
}

message ReviewStats {
  double averageRating = 1;
  int32 totalReviews = 2;
  map<int32, int32> ratingDistribution = 3;
  double positivePercentage = 4;
  double negativePercentage = 5;
  double neutralPercentage = 6;
  repeated string recentComments = 7;
  int32 totalExchanges = 8;
  double reviewRate = 9;
}

message GetReviewStatsResponse {
  ReviewStats stats = 1;
  string userId = 2;
  string periodStart = 3;
  string periodEnd = 4;
} 