// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: src/proto/payment-verification.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "paymentverification";

export interface VerifyPaymentRequest {
  transactionId: string;
  verifiedBy: string;
}

export interface VerifyPaymentResponse {
  success: boolean;
  message: string;
}

export interface RejectPaymentRequest {
  transactionId: string;
  rejectedBy: string;
  reason: string;
}

export interface RejectPaymentResponse {
  success: boolean;
  message: string;
}

export const PAYMENTVERIFICATION_PACKAGE_NAME = "paymentverification";

export interface PaymentVerificationServiceClient {
  verifyPayment(request: VerifyPaymentRequest, metadata?: Metadata): Observable<VerifyPaymentResponse>;

  rejectPayment(request: RejectPaymentRequest, metadata?: Metadata): Observable<RejectPaymentResponse>;
}

export interface PaymentVerificationServiceController {
  verifyPayment(
    request: VerifyPaymentRequest,
    metadata?: Metadata,
  ): Promise<VerifyPaymentResponse> | Observable<VerifyPaymentResponse> | VerifyPaymentResponse;

  rejectPayment(
    request: RejectPaymentRequest,
    metadata?: Metadata,
  ): Promise<RejectPaymentResponse> | Observable<RejectPaymentResponse> | RejectPaymentResponse;
}

export function PaymentVerificationServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["verifyPayment", "rejectPayment"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PaymentVerificationService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PaymentVerificationService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PAYMENT_VERIFICATION_SERVICE_NAME = "PaymentVerificationService";
