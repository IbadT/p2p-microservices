syntax = "proto3";

package balance;

// ------------------------------
// Service
// ------------------------------

service BalanceService {
  rpc GetBalance (GetBalanceRequest) returns (Balance);
  rpc CreateHold (CreateHoldRequest) returns (BalanceHold);
  rpc ReleaseHold (ReleaseHoldRequest) returns (Empty);
  rpc Transfer (TransferRequest) returns (Empty);
  rpc Deposit (DepositRequest) returns (Balance);
  rpc Withdraw (WithdrawRequest) returns (Balance);
  rpc GetTransactionHistory (GetTransactionHistoryRequest) returns (GetTransactionHistoryResponse);
}

// ------------------------------
// Messages
// ------------------------------

message Empty {}

message GetBalanceRequest {
  string userId = 1;
}

message Balance {
  string id = 1;
  string userId = 2;
  map<string, double> cryptoBalance = 3;
  map<string, double> totalHoldAmount = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message CreateHoldRequest {
  string userId = 1;
  string cryptocurrency = 2;
  double amount = 3;
  string type = 4;
  optional string relatedTransactionId = 5;
}

message BalanceHold {
  string id = 1;
  string userId = 2;
  string cryptocurrency = 3;
  double amount = 4;
  string type = 5;
  optional string relatedTransactionId = 6;
  optional string expiresAt = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

message ReleaseHoldRequest {
  string holdId = 1;
}

message TransferRequest {
  string fromUserId = 1;
  string toUserId = 2;
  string cryptocurrency = 3;
  double amount = 4;
  string transactionId = 5;
}

message DepositRequest {
  string userId = 1;
  string cryptocurrency = 2;
  double amount = 3;
}

message WithdrawRequest {
  string userId = 1;
  string cryptocurrency = 2;
  double amount = 3;
}

message GetTransactionHistoryRequest {
  string userId = 1;
  optional string cryptocurrency = 2;
  optional string startDate = 3;
  optional string endDate = 4;
  optional int32 page = 5;
  optional int32 limit = 6;
}

message TransactionHistoryEntry {
  string id = 1;
  string userId = 2;
  string type = 3;
  string cryptocurrency = 4;
  double amount = 5;
  optional string relatedTransactionId = 6;
  string status = 7;
  string createdAt = 8;
}

message GetTransactionHistoryResponse {
  repeated TransactionHistoryEntry transactions = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
} 