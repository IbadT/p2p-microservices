version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: p2p_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: p2p
      PGDATA: /var/lig/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - garant-network
    restart: unless-stopped

    # Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: garant_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - garant-network
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: garant_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - garant-network
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc zookeeper 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: garant_app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - garant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - KAFKA_BROKERS=kafka:9092
      - FRONTEND_URL=http://localhost:3000
      - JWT_SECRET=your-strong-secret-key
      - SENTRY_DSN=https://1b7008922ee3c967cfb9c896bc345c35@o4504702503682048.ingest.us.sentry.io/4509094808256512
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    # Uncomment the line below if you want to override the entrypoint
    # command: ["npm", "run", "dev"]

networks:
  garant-network:
    driver: bridge

volumes:
  postgres_data:
